{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kev1n\\\\Documents\\\\batalha_naval\\\\batalha_naval_js\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport \"./Chat.css\";\nimport { io } from \"socket.io-client\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this._socket = io(\"http://localhost:3000/\");\n\n    this.updateInput = inputValue => {\n      this.setState({\n        userNameForChat: inputValue\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      var author = this.props.user.nome;\n      var message = this.inputMessageElement.value;\n\n      if (author.length && message.length) {\n        var messageObject = {\n          author: author,\n          message: message\n        };\n        this.renderMessage(messageObject, this.messagesElement);\n\n        this._socket.emit(\"sendMessage\", messageObject);\n      }\n    };\n\n    this._socket.on(\"receivedMessage\", message => {\n      this.renderMessage(message, this.messagesElement);\n    });\n\n    this._socket.on(\"previousMessages\", messages => {\n      for (var message of messages) {\n        this.renderMessage(message, this.messagesElement);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._socket.close();\n  }\n\n  renderMessage(message, node) {\n    if (node instanceof HTMLElement) {\n      node.innerHTML += '<div class=\"message\"><strong>' + message.author + \"</strong>: \" + message.message + \"</div>\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        disabled: true,\n        name: \"username\",\n        value: this.props.user.nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        ref: c => this.messagesElement = c\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        ref: c => this.inputMessageElement = c,\n        placeholder: \"Digite sua mensagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.handleSubmit.bind(this),\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.UserReducer.selectedUser\n  };\n}\n\nexport default connect(mapStateToProps)(Chat);","map":{"version":3,"sources":["C:/Users/kev1n/Documents/batalha_naval/batalha_naval_js/src/components/Chat/Chat.js"],"names":["io","React","connect","Chat","Component","constructor","props","_socket","updateInput","inputValue","setState","userNameForChat","handleSubmit","event","preventDefault","author","user","nome","message","inputMessageElement","value","length","messageObject","renderMessage","messagesElement","emit","on","messages","componentWillUnmount","close","node","HTMLElement","innerHTML","render","c","bind","mapStateToProps","state","UserReducer","selectedUser"],"mappings":"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","sourcesContent":["import \"./Chat.css\";\r\nimport { io } from \"socket.io-client\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass Chat extends React.Component {\r\n  messagesElement;\r\n  inputMessageElement;\r\n  _socket = io(\"http://localhost:3000/\");\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this._socket.on(\"receivedMessage\", (message) => {\r\n      this.renderMessage(message, this.messagesElement);\r\n    });\r\n\r\n    this._socket.on(\"previousMessages\", (messages) => {\r\n      for (var message of messages) {\r\n        this.renderMessage(message, this.messagesElement);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._socket.close();\r\n  }\r\n\r\n  updateInput = inputValue => {\r\n    this.setState({ userNameForChat: inputValue });\r\n  };\r\n\r\n  renderMessage(message, node) {\r\n    if (node instanceof HTMLElement) {\r\n      node.innerHTML +=\r\n        '<div class=\"message\"><strong>' +\r\n        message.author +\r\n        \"</strong>: \" +\r\n        message.message +\r\n        \"</div>\";\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    var author = this.props.user.nome;\r\n    var message = this.inputMessageElement.value;\r\n\r\n    if (author.length && message.length) {\r\n      var messageObject = {\r\n        author: author,\r\n        message: message,\r\n      };\r\n\r\n      this.renderMessage(messageObject, this.messagesElement);\r\n\r\n      this._socket.emit(\"sendMessage\", messageObject);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"chat\">\r\n        <input\r\n          type=\"text\"\r\n          disabled\r\n          name=\"username\"\r\n          value={this.props.user.nome}\r\n        />\r\n        <div className=\"messages\" ref={(c) => (this.messagesElement = c)}></div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"message\"\r\n          ref={(c) => (this.inputMessageElement = c)}\r\n          placeholder=\"Digite sua mensagem\"\r\n        />\r\n        <button type=\"button\" onClick={this.handleSubmit.bind(this)}>\r\n          Enviar\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.UserReducer.selectedUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Chat);\r\n"]},"metadata":{},"sourceType":"module"}